{"version":3,"sources":["components/usersContainer/userList/index.js","Costants/costants.js","API/posts.js","API/users.js","API/index.js","components/usersContainer/index.js","components/descriptionContainer/descriptionList/index.js","components/descriptionContainer/index.js","screens/Home/index.js","Helpers/storage.js","screens/Header/index.js","screens/Login/index.js","screens/Registration/FormContainer.js","screens/Registration/index.js","screens/Workspace/header.js","screens/Workspace/ItemList.js","screens/Workspace/ShowModal.js","screens/Workspace/index.js","App.js","serviceWorker.js","index.js"],"names":["UserList","user","className","username","url","Posts","fetch","then","response","ok","status","json","catch","err","console","log","data","method","body","JSON","stringify","headers","Users","id","Api","posts","users","getPosts","getUsers","loginHandler","registerHandler","addPost","getById","getPostsById","UsersContainer","useState","setUsers","loading","setLoading","useEffect","Spinner","animation","variant","map","key","Description","item","this","props","author","title","description","Component","Descriptions","state","descriptions","setState","reverse","index","Home","Storage","value","localStorage","setItem","Error","message","getItem","parse","removeItem","Header","changeState","tab","Button","onClick","storage","remove","Login","initialData","email","password","setData","onChangeData","target","name","Form","event","preventDefault","Group","controlId","Label","Control","type","placeholder","onChange","size","block","info","token","userId","set","error","FormContainer","changeInputValue","handleSubmitData","onSubmit","e","style","margin","padding","lastname","Check","custom","inline","label","Registration","initialState","handleShow","ItemList","post","ShowModal","handleClose","show","userName","get","personId","createPost","Modal","onHide","closeButton","bg","Title","Body","Footer","Workspace","setName","toggleButton","lastName","res","App","setTab","currentPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4586d9c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './userList.css'\r\n\r\nconst UserList = ({user}) =>{\r\n    return(\r\n        <div className='list'>\r\n            {/*<img src={user.avatar}  alt=\"\" className='avatar' />*/}\r\n            <label className='name'>{user.username}</label>\r\n        </div>\r\n    )\r\n}\r\nexport default UserList","export const url = 'https://it-blog-posts.herokuapp.com/api/';\r\n\r\nexport const endpoint_blog = 'posts';\r\n\r\nexport const endpoint_user='people';","import {endpoint_blog, url} from \"../Costants/costants\";\r\n\r\nclass Posts{\r\n    getPosts(){\r\n      return fetch(`${url}${endpoint_blog}`)\r\n            .then(response => {\r\n                if (response.ok && response.status === 200) {\r\n                    return response.json()\r\n                }\r\n            }).catch(err => {\r\n            console.log('Error', err)\r\n        })\r\n    }\r\n\r\n    addPost(data){\r\n        return fetch(`${url}${endpoint_blog}`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n    }\r\n}\r\nexport default Posts","import {endpoint_user, url} from \"../Costants/costants\";\r\n\r\nclass Users {\r\n    getUsers() {\r\n        return fetch(`${url}${endpoint_user}`)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n    }\r\n\r\n    loginHandler(data) {\r\n        return fetch(`${url}${endpoint_user}/login`,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n    }\r\n\r\n    registerHandler(data) {\r\n        return  fetch(`${url}${endpoint_user}`,\r\n            {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n    }\r\n\r\n    getById(id){\r\n        return fetch(`${url}${endpoint_user}/${id}`)\r\n    }\r\n\r\n    getPostsById(id){\r\n        return fetch(`${url}${endpoint_user}/${id}/posts`)\r\n    }\r\n};\r\nexport default Users\r\n","import Posts from \"./posts\";\r\nimport Users from \"./users\";\r\n\r\nconst Api = {\r\n    posts:new Posts(),\r\n    users:new Users(),\r\n}\r\nexport const getPosts = Api.posts.getPosts()\r\nexport const getUsers = Api.users.getUsers()\r\nexport const loginHandler = Api.users.loginHandler\r\nexport const registerHandler = Api.users.registerHandler\r\nexport const addPost = Api.posts.addPost\r\nexport const getById = Api.users.getById\r\nexport const getPostsById = Api.users.getPostsById","import React, {useState, useEffect} from 'react';\r\nimport UserList from \"./userList\";\r\nimport './usersContainer.css';\r\nimport {getUsers} from \"../../API\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst UsersContainer = () => {\r\n\r\n    const [users, setUsers] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getUsers.then(data => {\r\n            setUsers(data);\r\n            setLoading(false)\r\n        })\r\n            .catch(err => {\r\n                console.log(\"Error\", err);\r\n            });\r\n    }, [])\r\n    return (\r\n        <div className=\"container_item-left\" id='content'>\r\n            {\r\n                loading && <Spinner animation=\"border\" variant=\"primary\" />\r\n            }\r\n            {\r\n                users.map(user => {\r\n                    return <UserList key={user.id} user={user}/>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UsersContainer","import React, {Component} from 'react';\r\nimport './descriptionList.css'\r\n\r\nclass Description extends Component {\r\n    render() {\r\n        const{item} = this.props\r\n        return (\r\n            <div className='right_item'>\r\n                <div className={'row_header'}>\r\n                    <nav className={'bold_font'}>{item.author}</nav>\r\n                    <nav>{item.title}</nav>\r\n                </div>\r\n                <div>{item.description}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Description","import React, {Component} from 'react';\r\nimport Description from \"./descriptionList\";\r\nimport './descriptionContainer.css'\r\nimport {getPosts} from \"../../API\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass Descriptions extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            descriptions: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n           getPosts.then(data => {\r\n               this.setState({\r\n                   descriptions: data.reverse(),\r\n                   loading: false\r\n               })\r\n           })\r\n        }\r\n\r\n    render() {\r\n\r\n        const {descriptions, loading} = this.state\r\n\r\n        return (\r\n            <div className=\"container_item-right\">\r\n                <div className=\"right_item-main\" id=\"description\">\r\n                    {\r\n                        loading && <Spinner animation=\"border\" variant=\"primary\" />\r\n                    }\r\n                    {\r\n                        descriptions.map((description, index) => {\r\n                            return <Description key={index} item={description} />\r\n                        })\r\n                    }\r\n                </div>\r\n                <footer></footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Descriptions","import React from 'react';\r\nimport UsersContainer from \"../../components/usersContainer\";\r\nimport Descriptions from \"../../components/descriptionContainer\";\r\nimport './home.css'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container_1\">\r\n            <UsersContainer/>\r\n            <Descriptions/>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","export default class Storage {\r\n    static set(key, data) {\r\n        try {\r\n            const value = JSON.stringify(data);\r\n            localStorage.setItem(key, value);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static get(key) {\r\n        try {\r\n            const response = localStorage.getItem(key);\r\n            const data = JSON.parse(response) || null;\r\n            return data;\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static remove(key) {\r\n        try {\r\n            localStorage.removeItem(key);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './header.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport storage from \"../../Helpers/storage\";\r\n\r\nconst Header = ({changeState, tab}) => {\r\n   const removeToken = () =>{\r\n       changeState('homePage')\r\n       storage.remove('user')\r\n   }\r\n\r\n    return (\r\n        <header className=\"main\">\r\n            <div>\r\n                {\r\n                    tab === 'homePage'\r\n                        ?\r\n                        <p className='main_1'>\r\n                            <Button variant=\"outline-primary\" onClick={() => changeState('loginPage')}>Log in</Button>\r\n                            <Button variant=\"outline-primary\" onClick={() => changeState('registrationPage')}>Register</Button>\r\n                        </p> :\r\n                        tab === 'loginPage'\r\n                            ?\r\n                            <p className='main_1'>\r\n                                <Button variant=\"outline-primary\" onClick={() => changeState('homePage')}>Home</Button>\r\n                                <Button variant=\"outline-primary\" onClick={() => changeState('registrationPage')}>Register</Button>\r\n                            </p> :\r\n                            tab === 'registrationPage'\r\n                                ?\r\n                                <p className='main_1'>\r\n                                    <Button variant=\"outline-primary\" onClick={() => changeState('homePage')}>Home</Button>\r\n                                    <Button variant=\"outline-primary\" onClick={() => changeState('loginPage')}>Log in</Button>\r\n                                </p> :\r\n                                tab === 'workspacePage'\r\n                                    ?\r\n                                    <p className='main_1'>\r\n                                        <Button variant=\"outline-primary\" onClick={() => changeState('homePage')}>Home</Button>\r\n                                        <Button variant=\"outline-primary\" onClick={removeToken}>Log out</Button>\r\n                                    </p> : null\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React, {useState} from 'react';\r\nimport './login.css';\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport {loginHandler} from \"../../API\";\r\nimport storage from \"../../Helpers/storage\";\r\n\r\nconst Login = ({changeState}) => {\r\n    const initialData = {email:'',password:''}\r\n    const [data, setData] = useState(initialData)\r\n\r\n    const onChangeData = ({target:{name,value}}) =>{\r\n        setData({\r\n            ...data,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmitHandler = () => {\r\n        if(data.email && data.password){\r\n            loginHandler(data).then(response => {\r\n                if (response.status === 200) {\r\n                    setData(initialData)\r\n                    return response.json()\r\n                }\r\n            })\r\n                .then(data =>{\r\n                    const info={token:data.id,id:data.userId}\r\n                    storage.set('user',info)\r\n                    changeState('workspacePage')\r\n                }).catch(error=>{\r\n                throw new Error(error)\r\n            })\r\n        }\r\n    }\r\n        return (\r\n            <div className=\"container_log\">\r\n                <div className='border_reg'>\r\n                    <Form onClick={(event) => event.preventDefault()}>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" name={'email'} placeholder=\"Enter email\"\r\n                                          onChange={onChangeData}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name={'password'} placeholder=\" Enter password\"\r\n                                          onChange={onChangeData}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\" block onClick={onSubmitHandler}>\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    export default Login","import React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\n\r\nconst FormContainer = ({changeInputValue, handleSubmitData, data}) =>{\r\n    return(\r\n        <Form onSubmit={(e)=>e.preventDefault()}>\r\n            <Form.Group controlId=\"formGroupText\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control value={data.username}  type=\"text\" name={'username'} style={{margin:0,padding:0}}\r\n                              placeholder=\"Enter username\" onChange={changeInputValue} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupText\">\r\n                <Form.Label>Lastname</Form.Label>\r\n                <Form.Control value={data.lastname} type=\"text\" name={'lastname'} style={{margin:0,padding:0}}\r\n                              placeholder=\"Enter lastname\" onChange={changeInputValue} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control value={data.email} type=\"email\" name={'email'}\r\n                              placeholder=\"Enter email\" onChange={changeInputValue} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control value={data.password} type=\"password\" name={'password'} placeholder=\" Enter password\"\r\n                              onChange={changeInputValue} />\r\n            </Form.Group>\r\n\r\n            <Form.Check custom inline id={`custom-inline-radio-1`} label=\"Male\" name=\"formHorizontalRadios\" type='radio' />\r\n            <Form.Check custom inline id={`custom-inline-radio-2`} label=\"Female\" name=\"formHorizontalRadios\" type='radio' />\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check custom id={`custom-checkbox`} type=\"checkbox\" label=\"Send me email\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" block onClick={handleSubmitData}>\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default FormContainer","import React,{useState} from 'react';\r\nimport './registration.css';\r\nimport FormContainer from \"./FormContainer\";\r\nimport {registerHandler} from \"../../API\";\r\n\r\nconst Registration = () =>{\r\n    const initialState = {username:'',lastname:'',email:'',password:''}\r\n    const [data,setData] = useState(initialState)\r\n\r\n    const changeInputValue = ({target:{name,value}}) =>{\r\n        setData({\r\n            ...data,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const handleSubmitData = () =>{\r\n        registerHandler(data).then(response=>setData(initialState))\r\n    }\r\n    return(\r\n        <div className=\"container_register\">\r\n            <div className='border_reg'>\r\n               <FormContainer data={data} handleSubmitData={handleSubmitData} changeInputValue={changeInputValue} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Registration","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\nconst Header = ({handleShow, name}) =>{\r\n    return(\r\n        <section className=\"header_2\">\r\n            <nav className=\"left_section\">\r\n                <div className=\"image\"></div>\r\n                <label className=\"after_image\">{name}</label>\r\n            </nav>\r\n            <nav className=\"right_section\">\r\n                <Button variant=\"primary\" onClick={handleShow}>Create new Post</Button>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\n\r\nconst ItemList = ({post}) => {\r\n    return (\r\n        <div className='right_item'>\r\n            <div className={'row_header'}>\r\n                <nav className={'bold_font'}>{post.author}</nav>\r\n                <nav>{post.title}</nav>\r\n            </div>\r\n            <div>{post.description}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemList","import React, {useState,useEffect} from \"react\";\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {addPost, loginHandler} from \"../../API\";\r\nimport storage from \"../../Helpers/storage\";\r\n\r\nconst ShowModal = ({handleClose, show, userName}) => {\r\n    const user = storage.get('user')\r\n    const initialData = {author: userName, description: '', title: '', personId: user.id}\r\n    const [data, setData] = useState(initialData)\r\n\r\n    useEffect(()=>{\r\n        setData({...data,author:userName})\r\n    },[userName])\r\n\r\n    const createPost = ({target: {name, value}}) => {\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const submitDataHandler = () => {\r\n        addPost(data)\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton bg=\"info\">\r\n                <Modal.Title>Create new post</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" name={'title'} placeholder=\"title\" onChange={createPost}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGroupPassword\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name={'description'} placeholder=\"description\" onChange={createPost}/>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" size=\"lg\" block onClick={submitDataHandler}>\r\n                    Create\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ShowModal","import React, {useState, useEffect} from \"react\";\r\nimport './workspace.css';\r\nimport Header from \"./header\";\r\nimport ItemList from \"./ItemList\";\r\nimport ShowModal from './ShowModal';\r\nimport {getById, getPostsById} from \"../../API\";\r\nimport storage from \"../../Helpers/storage\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Workspace = () => {\r\n    const [state, setState] = useState({\r\n        show:false,\r\n        posts:[],\r\n        loading:true\r\n    })\r\n\r\n    const [name,setName] = useState('')\r\n    const {show,posts,loading} = state\r\n\r\n    const toggleButton = () => setState({...state,show:!show});\r\n    const user = storage.get('user')\r\n    useEffect(() => {\r\n        getById(user.id)\r\n            .then(data => data.json()).then(data => setName(`${data.userName} ${data.lastName}`))\r\n\r\n        getPostsById(user.id)\r\n            .then(res=>res.json()).then(data=>{\r\n                setState({...state,posts: data.reverse(),loading: false})\r\n        })\r\n        return () => {\r\n            storage.remove('user')\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <Header name={name} handleShow={toggleButton}/>\r\n                <div className=\"right_item-main\" id=\"description\">\r\n                {\r\n                    loading && <Spinner animation=\"border\" variant=\"primary\" />\r\n                }\r\n                {\r\n                    posts.map(post=>{\r\n                        return <ItemList key={post.id} post={post}/>\r\n                    })\r\n                }\r\n                </div>\r\n                <ShowModal handleClose={toggleButton} show={show} userName={name}/>\r\n            </main>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Workspace","import React, {useState} from 'react';\nimport './App.css';\nimport Home from \"./screens/Home\";\nimport Header from \"./screens/Header\";\nimport Login from \"./screens/Login\";\nimport Registration from \"./screens/Registration\";\nimport Workspace from \"./screens/Workspace\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    const [tab, setTab] = useState('homePage')\n\n    const changeState = currentPage => {\n        setTab(currentPage)\n    }\n    return (\n        <div className=\"App\">\n            <Header changeState={changeState} tab={tab}/>\n            {\n                tab === 'homePage' ? <Home/> :\n                    tab === 'loginPage' ? <Login changeState={changeState} tab={tab} /> :\n                        tab === 'registrationPage' ? <Registration/> :\n                            tab === 'workspacePage' ? <Workspace/> : null\n            }\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}